workflows:
  version: 2
  node-multi-build:
    jobs:
      - gally
      - test-node-v10.x:
          requires:
            - gally
      - test-node-v8.10:
          requires:
            - gally
      - deploy-local:
          context: projectName-local
          requires:
            - gally
            - test-node-v10.x
            - test-node-v8.10
          filters:
            branches:
              only:
                - dev
      - deploy-dev:
          context: projectName-dev
          requires:
            - gally
            - test-node-v10.x
            - test-node-v8.10
            - deploy-local
          filters:
            branches:
              only:
                - dev
      - deploy-stage:
          context: projectName-stage
          requires:
            - gally
            - test-node-v10.x
            - test-node-v8.10
          filters:
            branches:
              only:
                - stage
      - deploy-prod:
          context: projectName-prod
          requires:
            - gally
            - test-node-v10.x
            - test-node-v8.10
          filters:
            branches:
              only:
                - master
version: 2
jobs:
  gally:
    docker:
      - image: 'circleci/node:10'
    steps:
      - checkout
      - run: sudo yarn global add gally
      - run: gally promote $CIRCLE_BRANCH
  test-node-v8.10:
    docker:
      - image: 'lambci/lambda:build-nodejs8.10'
    steps:
      - run: 'curl -o- -L https://yarnpkg.com/install.sh | bash'
      - run: >-
          echo 'export
          PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH'
          >> $BASH_ENV
      - run: echo 'export LAMBDA_TASK_ROOT=$PWD' >> $BASH_ENV
      - checkout
      - run: rm -rf node_modules
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - run: >-
          (git add . && git diff-index --quiet HEAD --) || (git status && exit
          1);
  deploy-local:
    docker:
      - image: 'lambci/lambda:build-nodejs8.10'
    steps:
      - run: 'curl -o- -L https://yarnpkg.com/install.sh | bash'
      - run: >-
          echo 'export
          PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH'
          >> $BASH_ENV
      - run: echo 'export LAMBDA_TASK_ROOT=$PWD' >> $BASH_ENV
      - checkout
      - run: rm -rf node_modules
      - run: yarn install --frozen-lockfile
      - run: yarn global add serverless@1.42.2
      - run: yarn run build-clean
      - run:
          command: sls deploy --stack api --region awsRegion --env local --force
          no_output_timeout: 10m
  deploy-dev:
    docker:
      - image: 'lambci/lambda:build-nodejs8.10'
    steps:
      - run: 'curl -o- -L https://yarnpkg.com/install.sh | bash'
      - run: >-
          echo 'export
          PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH'
          >> $BASH_ENV
      - run: echo 'export LAMBDA_TASK_ROOT=$PWD' >> $BASH_ENV
      - checkout
      - run: rm -rf node_modules
      - run: yarn install --frozen-lockfile
      - run: yarn global add serverless@1.42.2
      - run: yarn run build-clean
      - run:
          command: sls deploy --stack api --region awsRegion --env dev --force
          no_output_timeout: 10m
  deploy-stage:
    docker:
      - image: 'lambci/lambda:build-nodejs8.10'
    steps:
      - run: 'curl -o- -L https://yarnpkg.com/install.sh | bash'
      - run: >-
          echo 'export
          PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH'
          >> $BASH_ENV
      - run: echo 'export LAMBDA_TASK_ROOT=$PWD' >> $BASH_ENV
      - checkout
      - run: rm -rf node_modules
      - run: yarn install --frozen-lockfile
      - run: yarn global add serverless@1.42.2
      - run: yarn run build-clean
      - run:
          command: sls deploy --stack api --region awsRegion --env stage --force
          no_output_timeout: 10m
  deploy-prod:
    docker:
      - image: 'lambci/lambda:build-nodejs8.10'
    steps:
      - run: 'curl -o- -L https://yarnpkg.com/install.sh | bash'
      - run: >-
          echo 'export
          PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH'
          >> $BASH_ENV
      - run: echo 'export LAMBDA_TASK_ROOT=$PWD' >> $BASH_ENV
      - checkout
      - run: rm -rf node_modules
      - run: yarn install --frozen-lockfile
      - run: yarn global add serverless@1.42.2
      - run: yarn run build-clean
      - run:
          command: sls deploy --stack api --region awsRegion --env prod --force
          no_output_timeout: 10m
  test-node-v10.x:
    docker:
      - image: 'lambci/lambda:build-nodejs10.x'
    steps:
      - run: 'curl -o- -L https://yarnpkg.com/install.sh | bash'
      - run: >-
          echo 'export
          PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH'
          >> $BASH_ENV
      - run: echo 'export LAMBDA_TASK_ROOT=$PWD' >> $BASH_ENV
      - checkout
      - run: rm -rf node_modules
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - run: >-
          (git add . && git diff-index --quiet HEAD --) || (git status && exit
          1);
